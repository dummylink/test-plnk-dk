#!/bin/bash
###############################################################################
# This script creates the digital I/O application in this directory.
###############################################################################

###############################################################################
# include project configuration
#
. ../../project.config

BSP_DIR=./bsp
LIBAPIDIR=../../libCnApi

###############################################################################
INPUT_VARS=$@

echo --- This is create-this-app ---
echo input parameters: $INPUT_VARS


###############################################################################
# Include directories
INCLUDES="\
${LIBAPIDIR}/include \
${LIBAPIDIR}/utils"

###############################################################################
# Custom libraries
LIBDIRS="${LIBAPIDIR}/target/nios2_newlib"
LIBNAMES="CnApi"

###############################################################################
# Select here between debug and release settings
#DBG_MODE=NDEBUG
DBG_MODE=_DEBUG
#MODFLAGS=-D$(DBG_MODE)

CFLAGS="-D${DBG_MODE} -DDEF_DEBUG_LVL=0xEC00FF00L -DALTERA_MUTEX_SYNC"
#EXTRA_CFLAGS = -Wa,-alhs $(INCLUDES) $(MODFLAGS)

###############################################################################
SRCFILES="main.c"


###############################################################################
# work-around for bug in Nios2 EDS V9.0
cmd="nios2-app-generate-makefile --bsp-dir $BSP_DIR --version"
$cmd | grep "9.0"
if [ "$?" == "0" ] ; then
# V9.0 needs additional double quotes around the include directories
INCLUDES=\"${INCLUDES}\"
fi

NIOS2_APP_GEN_ARGS="--elf-name epl.elf --set OBJDUMP_INCLUDE_SOURCE 1 \
--set CREATE_OBJDUMP 0 \
--set CFLAGS=\"${CFLAGS}\" \
--set APP_LIBRARY_DIRS=\"${LIBDIRS}\" \
--set APP_LIBRARY_NAMES=\"${LIBNAMES}\" \
--set APP_INCLUDE_DIRS=\"${INCLUDES}\" \
--src-files $SRCFILES"
#--set APP_CFLAGS_DEBUG_LEVEL \

#echo "${NIOS2_APP_GEN_ARGS}"

# First, check to see if $SOPC_KIT_NIOS2 environmental variable is set.
# This variable is required for the command line tools to execute correctly.
if [ -z $SOPC_KIT_NIOS2 ]
then
    echo Required \$SOPC_KIT_NIOS2 Environmental Variable is not set!
    exit 1
fi

# save arguments for passing to create-this-bsp
SAVE_ARGS=$@

# process arguments
SKIP_MAKE=
REBUILD=
NO_OPT=
while [ $# -gt 0 ]
do
  case "$1" in
      # Don't run make if create-this-app script is called with --no-make arg
      --no-make)
          SKIP_MAKE=1
          ;;
      --rebuild)
          rm -f ./Makefile
          REBUILD=1
          ;;
      --debug)
          NO_OPT=1
          ;;
	  --sopcdir)
		 shift
		 #relative path!
		 SOPC_DIR=$1
		 echo SOPC_DIR set to \"$SOPC_DIR\"
		 echo -------------------------------
		 ;;		  
  esac
  shift
done

if [ -z "$SOPC_DIR" ]; then
#SOPC_DIR=../../fpga/altera/EBV_DBC3C40/nios2_openmac_dpram_multinios
#SOPC_DIR=../../fpga/altera/TERASIC_DE2-115/nios2_openmac_dpram_multinios
echo "No SOPC directory specified !"
echo "Use parameter: --sopcdir <SOPC_directory>"
exit 1
fi

if [ -z "$NO_OPT" ]; then
    NIOS2_APP_GEN_ARGS="${NIOS2_APP_GEN_ARGS} --set APP_CFLAGS_OPTIMIZATION -O2"
else
# in case of --debug option ("-g" means to insert debug information)
    NIOS2_APP_GEN_ARGS="${NIOS2_APP_GEN_ARGS} --set APP_CFLAGS_OPTIMIZATION -O1 --set APP_CFLAGS_DEBUG_LEVEL -g" 	
fi

# Also make sure that the APP has not been created already.  Check for
# existence of Makefile in the app directory
if [ -f ./Makefile ]
then
    echo Application has already been created!
    echo Delete Makefile if you want to create a new application makefile
    echo or call this script with parameter --rebuild
    exit 1
fi


# We are selecting hal_default bsp because it supports this application.
# Check to see if the hal_default has already been generated by checking for
# existence of the public.mk file.  If not, we need to run
# create-this-bsp file to generate the bsp.
if [ -n "$REBUILD" -o ! -f $BSP_DIR/public.mk ]; then
    # Since BSP doesn't exist, create the BSP
    # Pass any command line arguments passed to this script to the BSP.
    pushd $BSP_DIR >> /dev/null
    ./create-this-bsp $SAVE_ARGS --cpu-name ap_cpu  || {
    	echo "create-this-bsp failed"
    	exit 1
    }
    popd >> /dev/null
fi

cmd="nios2-app-generate-makefile --bsp-dir $BSP_DIR --set QUARTUS_PROJECT_DIR=$SOPC_DIR $NIOS2_APP_GEN_ARGS"

echo "create-this-app: Running \"$cmd\""
$cmd || {
    echo "nios2-app-generate-makefile failed"
    exit 1
}

if [ -z "$SKIP_MAKE" ]; then
	cmd="make"

	echo "create-this-app: Running \"$cmd\""
	$cmd || {
    	echo "make failed"
	    exit 1
	}

	echo
	echo "To download and run the application:"
	echo "    1. Make sure the board is connected to the system."
	echo "    2. Run 'nios2-configure-sof -C $SOPC_DIR' to configure the FPGA with the hardware design."
	echo "    3. If you have a stdio device, run 'nios2-terminal' in a different shell."
	echo "    4. Run 'make download-elf' from the application directory."
	echo
	echo "To debug the application:"
	echo "    Import the project into Nios II IDE.  Refer to Nios II IDE Documentation for more information."
	echo
	echo -e ""
fi


exit 0